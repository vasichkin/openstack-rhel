#!/bin/bash


abspath="$(cd "${0%/*}" 2>/dev/null; echo "$PWD"/"${0##*/}")"
dirname="$(dirname $abspath)"
cd "$dirname" || exit -1


prj="swift"
DevMileStone="d4"
TarballsHome="http://swift.openstack.org/tarballs"

CurTarballVer=(`curl -s $TarballsHome/?C=M\;O=D | grep -m 1 swift-[0-9] | perl -p -e 's!^.*swift-(\d+\.\d+\.\d+)~(\d+\.r*\d+)\.tar\.gz.*$!\n$1 $2 $3 $4 $5\n!i'`)

ActualVersion=${CurTarballVer[0]}
ActualRelease=$ReleasePreSymbol${CurTarballVer[1]}
ActualTarBall="$prj-$ActualVersion~${CurTarballVer[1]}.tar.gz"

source trigger.conf
source build_helpers


# If you need to build a specific version - specify it as ./build release_num (digits only).
# If build # is not specified, latest available tarball will be built





case "$1" in
    build)
	check_enviroment
	update_spec
	get_tarball
	create_srpm
	create_rpm && commit_spec || undo_changes
	sign_rpm
	update_repo
        #do_mock
        ;;
    check)
        check_for_update
        curl -s "http://$jenkins/job/$JobName/build"
        [ $Debug ] && echo "Fire jenkins to build  $JobName"
         exit 0
        ;;
    build_ver)
        ActualRelease=$2
        build
        ;;
    release_check)
        check_git_update
        [[ $FireNewBuild == "1" ]] || exit 0
        curl -s "http://$jenkins/job/$JobName/build"
        [ $Debug ] && echo "Fire jenkins to build  $JobName"
         exit 0
        ;;
    release_build)
        create_rpm && sign_rpm && update_repo
        ;;

    *)
        echo $"Usage: $0 {build|check|build_ver|release}"
        echo "build - build rpms"
        echo "check - check for updates and trigger jenkins"
        echo "build_ver NUM - build specified release"
        echo "release_check - check release if spec update"
        echo "release_build - build release"
        exit 2

esac
exit $?

